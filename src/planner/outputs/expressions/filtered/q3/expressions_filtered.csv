Stage,Expression
0,"RecExpr { nodes: [Constant(Bool(true)), Column($7.15), Column($7.14), Column($7.13), Column($7.12), Column($7.11), Column($7.10), Column($7.9), Column($7.8), Column($7.7), Column($7.6), Column($7.5), Column($7.4), Column($7.3), Column($7.2), Column($7.1), Column($7.0), List([16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]), Table($7), Scan([18, 17, 0]), Column($6.8), Column($6.7), Column($6.6), Column($6.5), Column($6.4), Column($6.3), Column($6.2), Column($6.1), Column($6.0), List([28, 27, 26, 25, 24, 23, 22, 21, 20]), Table($6), Scan([30, 29, 0]), Column($5.7), Column($5.6), Column($5.5), Column($5.4), Column($5.3), Column($5.2), Column($5.1), Column($5.0), List([39, 38, 37, 36, 35, 34, 33, 32]), Table($5), Scan([41, 40, 0]), Inner, Join([43, 0, 42, 31]), Join([43, 0, 44, 19]), Constant(Date(Date(9204))), Gt([6, 46]), Lt([24, 46]), Eq([16, 28]), Eq([39, 27]), Constant(String(""BUILDING"")), Eq([33, 51]), And([52, 50]), And([53, 49]), And([54, 48]), And([55, 47]), Filter([56, 45]), Constant(Int32(1)), Sub([58, 10]), Mul([11, 59]), Sum(60), List([61]), List([16, 24, 21]), HashAgg([63, 62, 57]), Filter([0, 64]), Ref(61), Desc(66), List([67, 24]), Order([68, 65]), List([16, 66, 24, 21]), Proj([70, 69]), Constant(Int32(0)), Constant(Int32(10)), Limit([73, 72, 71])] }"
1,"RecExpr { nodes: [Constant(Bool(true)), Column($7.15), Column($7.14), Column($7.13), Column($7.12), Column($7.11), Column($7.10), Column($7.9), Column($7.8), Column($7.7), Column($7.6), Column($7.5), Column($7.4), Column($7.3), Column($7.2), Column($7.1), Column($7.0), List([16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]), Table($7), Scan([18, 17, 0]), Column($6.8), Column($6.7), Column($6.6), Column($6.5), Column($6.4), Column($6.3), Column($6.2), Column($6.1), Column($6.0), List([28, 27, 26, 25, 24, 23, 22, 21, 20]), Table($6), Scan([30, 29, 0]), Column($5.7), Column($5.6), Column($5.5), Column($5.4), Column($5.3), Column($5.2), Column($5.1), Column($5.0), List([39, 38, 37, 36, 35, 34, 33, 32]), Table($5), Scan([41, 40, 0]), Inner, Join([43, 0, 42, 31]), Join([43, 0, 44, 19]), Constant(Date(Date(9204))), Gt([6, 46]), Eq([27, 39]), Constant(String(""BUILDING"")), Eq([33, 49]), And([50, 48]), Eq([16, 28]), And([52, 51]), Lt([24, 46]), And([54, 53]), And([55, 47]), Filter([56, 45]), Constant(Int32(1)), Sub([58, 10]), Mul([11, 59]), Sum(60), List([61]), List([16, 24, 21]), HashAgg([63, 62, 57]), Ref(61), Desc(65), List([66, 24]), Order([67, 64]), List([16, 65, 24, 21]), Proj([69, 68]), Constant(Int32(0)), Constant(Int32(10)), Limit([72, 71, 70])] }"
2,"RecExpr { nodes: [Constant(Bool(true)), Column($7.10), Column($7.6), Column($7.5), Column($7.0), List([4, 3, 2, 1]), Table($7), Scan([6, 5, 0]), Constant(Date(Date(9204))), Gt([1, 8]), Filter([9, 7]), List([4, 3, 2]), Proj([11, 10]), Column($6.7), Column($6.4), Column($6.1), Column($6.0), List([16, 15, 14, 13]), Table($6), Scan([18, 17, 0]), Gt([8, 14]), Filter([20, 19]), Column($5.6), Column($5.0), List([23, 22]), Table($5), Scan([25, 24, 0]), Constant(String(""BUILDING"")), Eq([22, 27]), Filter([28, 26]), List([23]), Proj([30, 29]), Eq([15, 23]), Inner, Join([33, 32, 31, 21]), List([16, 14, 13]), Proj([35, 34]), Eq([4, 16]), Join([33, 37, 36, 12]), List([14, 13, 4, 3, 2]), Proj([39, 38]), Constant(Int32(1)), Sub([41, 2]), Mul([3, 42]), Sum(43), List([44]), List([4, 14, 13]), HashAgg([46, 45, 40]), Ref(44), Desc(48), List([49, 14]), Constant(Int32(0)), Constant(Int32(10)), TopN([52, 51, 50, 47]), List([4, 48, 14, 13]), Proj([54, 53])] }"
3,"RecExpr { nodes: [Constant(Bool(true)), Column($7.10), Column($7.6), Column($7.5), Column($7.0), List([4, 3, 2, 1]), Table($7), Scan([6, 5, 0]), Constant(Date(Date(9204))), Gt([1, 8]), Filter([9, 7]), List([4, 3, 2]), Proj([11, 10]), Column($6.7), Column($6.4), Column($6.1), Column($6.0), List([16, 15, 14, 13]), Table($6), Scan([18, 17, 0]), Gt([8, 14]), Filter([20, 19]), Column($5.6), Column($5.0), List([23, 22]), Table($5), Scan([25, 24, 0]), Constant(String(""BUILDING"")), Eq([22, 27]), Filter([28, 26]), List([23]), Proj([30, 29]), List([15]), Inner, HashJoin([33, 0, 30, 32, 31, 21]), List([16, 14, 13]), Proj([35, 34]), List([4]), List([16]), HashJoin([33, 0, 38, 37, 36, 12]), List([14, 13, 4, 3, 2]), Proj([40, 39]), Constant(Int32(1)), Sub([42, 2]), Mul([3, 43]), Sum(44), List([45]), List([4, 14, 13]), HashAgg([47, 46, 41]), Ref(45), Desc(49), List([50, 14]), Constant(Int32(0)), Constant(Int32(10)), TopN([53, 52, 51, 48]), List([4, 49, 14, 13]), Proj([55, 54])] }"
