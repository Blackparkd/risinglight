Stage,Class_ID,Node_Count,Nodes
3,0,1,Constant(Bool(true))
3,1,1,Column($2.6)
3,2,1,Column($2.5)
3,3,1,Column($2.3)
3,4,1,Column($2.0)
3,5,1,"List([4, 3, 2, 1])"
3,6,1,Table($2)
3,7,3,"Scan([6, 5, 0]); Proj([5, 7]); Filter([0, 7])"
3,8,1,Constant(Int32(1))
3,9,3,"GtEq([2, 8]); And([0, 9]); And([9, 0])"
3,10,3,"Proj([5, 10]); Filter([0, 10]); Filter([9, 7])"
3,11,1,Column($7.14)
3,12,1,Column($7.13)
3,13,1,Column($7.6)
3,14,1,Column($7.5)
3,15,1,Column($7.4)
3,16,1,Column($7.1)
3,17,1,"List([16, 15, 14, 13, 12, 11])"
3,18,1,Table($7)
3,19,3,"Scan([18, 17, 0]); Proj([17, 19]); Filter([0, 19])"
3,20,1,"Constant(String(""AIR REG""))"
3,21,1,"Constant(String(""AIR""))"
3,22,1,"List([21, 20])"
3,23,3,"And([0, 23]); And([23, 0]); In([11, 22])"
3,24,1,"Constant(String(""DELIVER IN PERSON""))"
3,25,4,"Eq([12, 24]); Eq([24, 12]); And([0, 25]); And([25, 0])"
3,26,4,"And([0, 26]); And([23, 25]); And([25, 23]); And([26, 0])"
3,27,5,"Proj([17, 27]); Filter([0, 27]); Filter([23, 212]); Filter([25, 131]); Filter([26, 19])"
3,28,1,"List([16, 15, 14, 13])"
3,29,5,"Proj([28, 27]); Proj([28, 29]); Proj([28, 234]); Proj([28, 391]); Filter([0, 29])"
3,30,1,List([4])
3,31,1,List([16])
3,32,1,Inner
3,33,3,"Filter([0, 33]); Join([32, 135, 29, 10]); HashJoin([32, 0, 31, 30, 29, 10])"
3,34,1,"List([3, 2, 1, 15, 14, 13])"
3,35,5,"Proj([34, 33]); Proj([34, 35]); Proj([34, 218]); Proj([34, 237]); Filter([0, 35])"
3,36,1,Constant(Int32(30))
3,37,1,"GtEq([36, 15])"
3,38,1,Constant(Int32(20))
3,39,1,"GtEq([15, 38])"
3,40,2,"And([37, 39]); And([39, 37])"
3,41,1,"Constant(String(""LG PKG""))"
3,42,1,"Constant(String(""LG PACK""))"
3,43,1,"Constant(String(""LG BOX""))"
3,44,1,"Constant(String(""LG CASE""))"
3,45,1,"List([44, 43, 42, 41])"
3,46,1,"In([1, 45])"
3,47,6,"And([37, 117]); And([39, 164]); And([40, 46]); And([46, 40]); And([117, 37]); And([164, 39])"
3,48,1,"Constant(String(""Brand#33""))"
3,49,2,"Eq([3, 48]); Eq([48, 3])"
3,50,14,"And([37, 172]); And([39, 170]); And([40, 119]); And([46, 166]); And([47, 49]); And([49, 47]); And([117, 293]); And([119, 40]); And([164, 337]); And([166, 46]); And([170, 39]); And([172, 37]); And([293, 117]); And([337, 164])"
3,51,1,Constant(Int32(15))
3,52,1,"GtEq([51, 2])"
3,53,30,"And([37, 182]); And([39, 315]); And([40, 180]); And([46, 299]); And([47, 121]); And([49, 174]); And([50, 52]); And([52, 50]); And([117, 483]); And([119, 297]); And([121, 47]); And([164, 601]); And([166, 343]); And([170, 480]); And([172, 340]); And([174, 49]); And([180, 40]); And([182, 37]); And([293, 345]); And([297, 119]); And([299, 46]); And([315, 39]); And([337, 347]); And([340, 172]); And([343, 166]); And([345, 293]); And([347, 337]); And([480, 170]); And([483, 117]); And([601, 164])"
3,54,1,"Constant(String(""MED PACK""))"
3,55,1,"Constant(String(""MED PKG""))"
3,56,1,"Constant(String(""MED BOX""))"
3,57,1,"Constant(String(""MED BAG""))"
3,58,1,"List([57, 56, 55, 54])"
3,59,1,"In([1, 58])"
3,60,1,Constant(Int32(10))
3,61,1,"GtEq([15, 60])"
3,62,2,"And([59, 61]); And([61, 59])"
3,63,1,"Constant(String(""Brand#23""))"
3,64,2,"Eq([3, 63]); Eq([63, 3])"
3,65,6,"And([59, 123]); And([61, 184]); And([62, 64]); And([64, 62]); And([123, 59]); And([184, 61])"
3,66,1,"GtEq([60, 2])"
3,67,1,"GtEq([38, 15])"
3,68,2,"And([66, 67]); And([67, 66])"
3,69,30,"And([59, 196]); And([61, 321]); And([62, 125]); And([64, 190]); And([65, 68]); And([66, 494]); And([67, 492]); And([68, 65]); And([123, 319]); And([125, 62]); And([184, 355]); And([190, 64]); And([196, 59]); And([319, 123]); And([321, 61]); And([327, 538]); And([329, 527]); And([355, 184]); And([492, 67]); And([494, 66]); And([523, 559]); And([525, 543]); And([527, 329]); And([532, 536]); And([534, 557]); And([536, 532]); And([538, 327]); And([543, 525]); And([557, 534]); And([559, 523])"
3,70,1,"Constant(String(""SM PKG""))"
3,71,1,"Constant(String(""SM PACK""))"
3,72,1,"Constant(String(""SM BOX""))"
3,73,1,"Constant(String(""SM CASE""))"
3,74,1,"List([73, 72, 71, 70])"
3,75,1,"In([1, 74])"
3,76,1,"GtEq([15, 8])"
3,77,2,"And([75, 76]); And([76, 75])"
3,78,1,"Constant(String(""Brand#12""))"
3,79,2,"Eq([3, 78]); Eq([78, 3])"
3,80,6,"And([75, 127]); And([76, 198]); And([77, 79]); And([79, 77]); And([127, 75]); And([198, 76])"
3,81,1,Constant(Int32(5))
3,82,1,"GtEq([81, 2])"
3,83,1,Constant(Int32(11))
3,84,1,"GtEq([83, 15])"
3,85,2,"And([82, 84]); And([84, 82])"
3,86,30,"And([75, 210]); And([76, 325]); And([77, 129]); And([79, 204]); And([80, 85]); And([82, 503]); And([84, 501]); And([85, 80]); And([127, 323]); And([129, 77]); And([198, 359]); And([204, 79]); And([210, 75]); And([323, 127]); And([325, 76]); And([331, 576]); And([333, 565]); And([359, 198]); And([501, 84]); And([503, 82]); And([561, 579]); And([563, 581]); And([565, 333]); And([568, 572]); And([570, 574]); And([572, 568]); And([574, 570]); And([576, 331]); And([579, 561]); And([581, 563])"
3,87,1,"Or([86, 69])"
3,88,3,"And([0, 88]); And([88, 0]); Or([87, 53])"
3,89,6,"Proj([34, 89]); Proj([34, 138]); Proj([34, 238]); Proj([34, 366]); Filter([0, 89]); Filter([88, 35])"
3,90,1,"List([14, 13])"
3,91,6,"Proj([90, 89]); Proj([90, 91]); Proj([90, 138]); Proj([90, 238]); Proj([90, 366]); Filter([0, 91])"
3,92,1,"Sub([8, 13])"
3,93,1,"Mul([14, 92])"
3,94,1,Sum(93)
3,95,1,List([94])
3,96,1,"Agg([95, 91])"
3,97,1,Ref(94)
3,98,1,List([97])
3,99,1,"Proj([98, 96])"
3,100,2,"And([39, 46]); And([46, 39])"
3,101,2,"And([46, 49]); And([49, 46])"
3,102,2,"And([49, 52]); And([52, 49])"
3,103,2,"And([61, 64]); And([64, 61])"
3,104,6,"And([64, 68]); And([66, 329]); And([67, 327]); And([68, 64]); And([327, 67]); And([329, 66])"
3,105,2,"And([76, 79]); And([79, 76])"
3,106,6,"And([79, 85]); And([82, 333]); And([84, 331]); And([85, 79]); And([331, 84]); And([333, 82])"
3,107,3,"Proj([17, 131]); Filter([0, 131]); Filter([23, 19])"
3,108,3,"Filter([0, 218]); Join([32, 135, 10, 29]); HashJoin([32, 0, 30, 31, 10, 29])"
3,109,4,"Eq([4, 16]); Eq([16, 4]); And([0, 135]); And([135, 0])"
3,110,4,"And([0, 225]); And([88, 135]); And([135, 88]); And([225, 0])"
3,111,3,"Filter([0, 138]); Filter([88, 33]); Join([32, 225, 29, 10])"
3,112,6,"And([39, 343]); And([46, 480]); And([52, 117]); And([117, 52]); And([343, 39]); And([480, 46])"
3,113,2,"And([39, 52]); And([52, 39])"
3,114,2,"And([46, 52]); And([52, 46])"
3,115,6,"And([59, 525]); And([61, 523]); And([62, 66]); And([66, 62]); And([523, 61]); And([525, 59])"
3,116,2,"And([37, 46]); And([46, 37])"
3,117,6,"And([37, 337]); And([39, 293]); And([40, 49]); And([49, 40]); And([293, 39]); And([337, 37])"
3,118,2,"And([39, 49]); And([49, 39])"
3,119,6,"And([37, 119]); And([46, 293]); And([49, 164]); And([119, 37]); And([164, 49]); And([293, 46])"
3,120,6,"And([39, 119]); And([46, 337]); And([49, 117]); And([117, 49]); And([119, 39]); And([337, 46])"
3,121,14,"And([37, 345]); And([39, 347]); And([40, 343]); And([46, 297]); And([47, 52]); And([52, 47]); And([117, 340]); And([164, 480]); And([297, 46]); And([340, 117]); And([343, 40]); And([345, 37]); And([347, 39]); And([480, 164])"
3,122,6,"And([37, 343]); And([46, 340]); And([52, 164]); And([164, 52]); And([340, 46]); And([343, 37])"
3,123,6,"And([75, 574]); And([76, 572]); And([77, 84]); And([84, 77]); And([572, 76]); And([574, 75])"
3,124,6,"And([46, 121]); And([49, 343]); And([52, 119]); And([119, 52]); And([121, 46]); And([343, 49])"
3,125,14,"And([39, 180]); And([46, 601]); And([49, 345]); And([52, 172]); And([117, 121]); And([119, 480]); And([121, 117]); And([172, 52]); And([180, 39]); And([337, 343]); And([343, 337]); And([345, 49]); And([480, 119]); And([601, 46])"
3,126,2,"And([59, 64]); And([64, 59])"
3,127,2,"And([75, 84]); And([84, 75])"
3,128,6,"And([75, 331]); And([79, 561]); And([82, 198]); And([198, 82]); And([331, 75]); And([561, 79])"
3,129,10,"And([59, 355]); And([61, 319]); And([62, 68]); And([66, 538]); And([67, 527]); And([68, 62]); And([319, 61]); And([355, 59]); And([527, 67]); And([538, 66])"
3,130,6,"And([61, 68]); And([66, 536]); And([67, 525]); And([68, 61]); And([525, 67]); And([536, 66])"
3,131,6,"And([76, 331]); And([79, 563]); And([82, 127]); And([127, 82]); And([331, 76]); And([563, 79])"
3,132,14,"And([61, 125]); And([64, 355]); And([66, 559]); And([67, 557]); And([68, 123]); And([123, 68]); And([125, 61]); And([327, 536]); And([329, 525]); And([355, 64]); And([525, 329]); And([536, 327]); And([557, 67]); And([559, 66])"
3,133,2,"And([75, 79]); And([79, 75])"
3,134,6,"And([75, 563]); And([76, 561]); And([77, 82]); And([82, 77]); And([561, 76]); And([563, 75])"
3,135,2,"And([76, 82]); And([82, 76])"
3,136,10,"And([75, 359]); And([76, 323]); And([77, 85]); And([82, 576]); And([84, 565]); And([85, 77]); And([323, 76]); And([359, 75]); And([565, 84]); And([576, 82])"
3,137,6,"And([76, 85]); And([82, 574]); And([84, 563]); And([85, 76]); And([563, 84]); And([574, 82])"
3,138,2,"And([75, 82]); And([82, 75])"
3,139,14,"And([76, 129]); And([79, 359]); And([82, 579]); And([84, 568]); And([85, 127]); And([127, 85]); And([129, 76]); And([331, 574]); And([333, 563]); And([359, 79]); And([563, 333]); And([568, 84]); And([574, 331]); And([579, 82])"
3,140,3,"Proj([17, 212]); Filter([0, 212]); Filter([25, 19])"
3,141,6,"Proj([236, 89]); Proj([236, 138]); Proj([236, 238]); Proj([236, 366]); Filter([0, 238]); Filter([88, 237])"
3,142,6,"And([59, 329]); And([64, 534]); And([67, 184]); And([184, 67]); And([329, 59]); And([534, 64])"
3,143,14,"And([59, 559]); And([61, 543]); And([62, 329]); And([64, 538]); And([65, 67]); And([67, 65]); And([123, 534]); And([184, 536]); And([329, 62]); And([534, 123]); And([536, 184]); And([538, 64]); And([543, 61]); And([559, 59])"
3,144,1,"List([16, 15, 14, 13, 12])"
3,145,3,"Proj([232, 131]); Proj([232, 233]); Filter([0, 233])"
3,146,4,"Proj([232, 27]); Proj([232, 234]); Filter([0, 234]); Filter([25, 233])"
3,147,1,"List([15, 14, 13, 3, 2, 1])"
3,148,5,"Proj([236, 33]); Proj([236, 35]); Proj([236, 218]); Proj([236, 237]); Filter([0, 237])"
3,149,2,"And([37, 49]); And([49, 37])"
3,150,6,"And([59, 536]); And([61, 534]); And([62, 67]); And([67, 62]); And([534, 61]); And([536, 59])"
3,151,6,"And([37, 480]); And([39, 340]); And([40, 52]); And([52, 40]); And([340, 39]); And([480, 37])"
3,152,14,"And([37, 601]); And([39, 483]); And([40, 121]); And([49, 297]); And([52, 166]); And([121, 40]); And([166, 52]); And([293, 480]); And([297, 49]); And([337, 340]); And([340, 337]); And([480, 293]); And([483, 39]); And([601, 37])"
3,153,3,"Proj([389, 212]); Proj([389, 390]); Filter([0, 390])"
3,154,6,"And([39, 121]); And([49, 480]); And([52, 337]); And([121, 39]); And([337, 52]); And([480, 49])"
3,155,14,"And([75, 579]); And([76, 581]); And([77, 333]); And([79, 576]); And([80, 84]); And([84, 80]); And([127, 572]); And([198, 574]); And([333, 77]); And([572, 127]); And([574, 198]); And([576, 79]); And([579, 75]); And([581, 76])"
3,156,14,"And([75, 568]); And([76, 570]); And([77, 331]); And([79, 565]); And([80, 82]); And([82, 80]); And([127, 561]); And([198, 563]); And([331, 77]); And([561, 127]); And([563, 198]); And([565, 79]); And([568, 75]); And([570, 76])"
3,157,2,"And([59, 67]); And([67, 59])"
3,158,4,"Proj([389, 27]); Proj([389, 391]); Filter([0, 391]); Filter([23, 390])"
3,159,14,"And([59, 557]); And([61, 532]); And([62, 327]); And([64, 527]); And([65, 66]); And([66, 65]); And([123, 523]); And([184, 525]); And([327, 62]); And([523, 123]); And([525, 184]); And([527, 64]); And([532, 61]); And([557, 59])"
3,160,14,"And([37, 180]); And([46, 483]); And([49, 347]); And([52, 170]); And([119, 340]); And([121, 164]); And([164, 121]); And([170, 52]); And([180, 37]); And([293, 343]); And([340, 119]); And([343, 293]); And([347, 49]); And([483, 46])"
3,161,2,"And([61, 66]); And([66, 61])"
3,162,6,"And([59, 68]); And([66, 534]); And([67, 523]); And([68, 59]); And([523, 67]); And([534, 66])"
3,163,14,"And([59, 125]); And([64, 319]); And([66, 543]); And([67, 532]); And([68, 184]); And([125, 59]); And([184, 68]); And([319, 64]); And([327, 534]); And([329, 523]); And([523, 329]); And([532, 67]); And([534, 327]); And([543, 66])"
3,164,6,"And([75, 85]); And([82, 572]); And([84, 561]); And([85, 75]); And([561, 84]); And([572, 82])"
3,165,14,"And([75, 129]); And([79, 323]); And([82, 581]); And([84, 570]); And([85, 198]); And([129, 75]); And([198, 85]); And([323, 79]); And([331, 572]); And([333, 561]); And([561, 333]); And([570, 84]); And([572, 331]); And([581, 82])"
3,166,2,"And([64, 66]); And([66, 64])"
3,167,2,"And([64, 67]); And([67, 64])"
3,168,2,"And([79, 82]); And([82, 79])"
3,169,2,"And([79, 84]); And([84, 79])"
3,170,2,"And([37, 52]); And([52, 37])"
3,171,1,"List([16, 15, 14, 13, 11])"
3,172,6,"And([75, 333]); And([79, 572]); And([84, 198]); And([198, 84]); And([333, 75]); And([572, 79])"
3,173,3,"Filter([0, 366]); Filter([88, 218]); Join([32, 225, 10, 29])"
3,174,6,"And([59, 327]); And([64, 523]); And([66, 184]); And([184, 66]); And([327, 59]); And([523, 64])"
3,175,2,"And([59, 66]); And([66, 59])"
3,176,6,"And([76, 333]); And([79, 574]); And([84, 127]); And([127, 84]); And([333, 76]); And([574, 79])"
3,177,2,"And([61, 67]); And([67, 61])"
3,178,6,"And([61, 327]); And([64, 525]); And([66, 123]); And([123, 66]); And([327, 61]); And([525, 64])"
3,179,6,"And([61, 329]); And([64, 536]); And([67, 123]); And([123, 67]); And([329, 61]); And([536, 64])"
3,180,6,"And([37, 121]); And([49, 340]); And([52, 293]); And([121, 37]); And([293, 52]); And([340, 49])"
3,181,2,"And([76, 84]); And([84, 76])"
