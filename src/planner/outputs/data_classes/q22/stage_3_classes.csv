Stage,Class_ID,Node_Count,Nodes
3,0,1,Constant(Bool(true))
3,1,1,Column($6.1)
3,2,1,List([1])
3,3,1,Table($6)
3,4,3,"Scan([3, 2, 0]); Proj([2, 4]); Filter([0, 4])"
3,5,1,Column($5.5(1))
3,6,1,Column($5.4(1))
3,7,1,"List([6, 5])"
3,8,1,Table($5)
3,9,2,"Scan([8, 7, 0]); Proj([7, 9])"
3,10,1,"Constant(String(""17""))"
3,11,1,"Constant(String(""18""))"
3,12,1,"Constant(String(""30""))"
3,13,1,"Constant(String(""29""))"
3,14,1,"Constant(String(""23""))"
3,15,1,"Constant(String(""31""))"
3,16,1,"Constant(String(""13""))"
3,17,1,"List([16, 15, 14, 13, 12, 11, 10])"
3,18,1,Constant(Int32(2))
3,19,1,Constant(Int32(1))
3,20,1,"Substring([6, 19, 18])"
3,21,1,"In([20, 17])"
3,22,1,Constant(Decimal(0.00))
3,23,1,"Gt([5, 22])"
3,24,2,"And([21, 23]); And([23, 21])"
3,25,4,"Proj([7, 25]); Filter([21, 99]); Filter([23, 71]); Filter([24, 9])"
3,26,1,List([5])
3,27,3,"Proj([26, 25]); Proj([26, 27]); Filter([23, 123])"
3,28,1,Count(5)
3,29,1,Sum(5)
3,30,1,"List([29, 28])"
3,31,2,"Filter([0, 31]); Agg([30, 27])"
3,32,1,Ref(28)
3,33,1,Ref(29)
3,34,1,"Div([33, 32])"
3,35,1,List([34])
3,36,3,"Proj([35, 31]); Proj([35, 188]); Filter([0, 36])"
3,37,1,Ref(34)
3,38,1,List([37])
3,39,3,"Proj([38, 36]); Proj([38, 39]); Filter([0, 39])"
3,40,1,Column($5.5)
3,41,1,Column($5.4)
3,42,1,Column($5.0)
3,43,1,"List([42, 41, 40])"
3,44,3,"Scan([8, 43, 0]); Proj([43, 44]); Filter([0, 44])"
3,45,1,LeftOuter
3,46,3,"Proj([88, 46]); Filter([0, 46]); Join([45, 0, 44, 39])"
3,47,3,"Gt([40, 37]); And([0, 47]); And([47, 0])"
3,48,1,"Substring([41, 19, 18])"
3,49,3,"And([0, 49]); And([49, 0]); In([48, 17])"
3,50,4,"And([0, 50]); And([47, 49]); And([49, 47]); And([50, 0])"
3,51,5,"Proj([88, 51]); Filter([0, 51]); Filter([47, 101]); Filter([49, 73]); Filter([50, 46])"
3,52,4,"Proj([43, 51]); Proj([43, 52]); Filter([0, 52]); Filter([49, 126])"
3,53,1,List([42])
3,54,1,Anti
3,55,2,"Join([54, 75, 52, 4]); HashJoin([54, 0, 53, 2, 52, 4])"
3,56,1,"List([48, 40])"
3,57,1,"Proj([56, 55])"
3,58,1,Sum(40)
3,59,1,RowCount
3,60,1,"List([59, 58])"
3,61,1,Ref(48)
3,62,1,List([61])
3,63,2,"HashAgg([62, 60, 57]); HashAgg([62, 60, 95])"
3,64,1,"Order([62, 63])"
3,65,1,Ref(58)
3,66,1,Ref(59)
3,67,1,"List([61, 66, 65])"
3,68,2,"Proj([26, 71]); Proj([26, 123])"
3,69,2,"Proj([7, 71]); Filter([21, 9])"
3,70,3,"Proj([88, 73]); Filter([0, 73]); Filter([47, 46])"
3,71,4,"Eq([1, 42]); Eq([42, 1]); And([0, 75]); And([75, 0])"
3,72,2,"Proj([94, 57]); Proj([94, 95])"
3,73,1,"List([61, 40])"
3,74,3,"Proj([43, 157]); Filter([0, 157]); Filter([49, 44])"
3,75,2,"Proj([67, 63]); Proj([67, 82])"
3,76,3,"Proj([67, 64]); Proj([67, 83]); Order([62, 82])"
3,77,3,"Proj([187, 31]); Proj([187, 188]); Filter([0, 188])"
3,78,4,"Proj([88, 101]); Filter([0, 101]); Filter([49, 46]); Join([45, 0, 157, 39])"
3,79,1,"List([42, 41, 40, 37])"
3,80,3,"Proj([43, 73]); Proj([43, 126]); Filter([0, 126])"
3,81,1,"List([33, 32])"
3,82,2,"Proj([7, 99]); Filter([23, 9])"
