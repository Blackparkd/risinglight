Stage,Class_ID,Node_Count,Nodes
3,0,1,Constant(Bool(true))
3,1,1,Column($7.4(1))
3,2,1,Column($7.1(1))
3,3,1,"List([2, 1])"
3,4,1,Table($7)
3,5,3,"Scan([4, 3, 0]); Proj([3, 5]); Filter([0, 5])"
3,6,1,Column($2.8)
3,7,1,Column($2.7)
3,8,1,Column($2.6)
3,9,1,Column($2.5)
3,10,1,Column($2.4)
3,11,1,Column($2.3)
3,12,1,Column($2.2)
3,13,1,Column($2.1)
3,14,1,Column($2.0)
3,15,1,"List([14, 13, 12, 11, 10, 9, 8, 7, 6])"
3,16,1,Table($2)
3,17,3,"Scan([16, 15, 0]); Proj([15, 17]); Filter([0, 17])"
3,18,1,"Constant(String(""MED BOX""))"
3,19,4,"Eq([8, 18]); Eq([18, 8]); And([0, 19]); And([19, 0])"
3,20,1,"Constant(String(""Brand#23""))"
3,21,4,"Eq([11, 20]); Eq([20, 11]); And([0, 21]); And([21, 0])"
3,22,4,"And([0, 22]); And([19, 21]); And([21, 19]); And([22, 0])"
3,23,5,"Proj([15, 23]); Filter([0, 23]); Filter([19, 102]); Filter([21, 81]); Filter([22, 17])"
3,24,1,Column($7.15)
3,25,1,Column($7.14)
3,26,1,Column($7.13)
3,27,1,Column($7.12)
3,28,1,Column($7.11)
3,29,1,Column($7.10)
3,30,1,Column($7.9)
3,31,1,Column($7.8)
3,32,1,Column($7.7)
3,33,1,Column($7.6)
3,34,1,Column($7.5)
3,35,1,Column($7.4)
3,36,1,Column($7.3)
3,37,1,Column($7.2)
3,38,1,Column($7.1)
3,39,1,Column($7.0)
3,40,1,"List([39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24])"
3,41,3,"Scan([4, 40, 0]); Proj([40, 41]); Filter([0, 41])"
3,42,1,List([14])
3,43,1,List([38])
3,44,1,Inner
3,45,5,"Proj([54, 45]); Proj([54, 127]); Filter([0, 45]); Join([44, 83, 41, 23]); HashJoin([44, 0, 43, 42, 41, 23])"
3,46,1,List([2])
3,47,1,LeftOuter
3,48,2,"Join([47, 86, 45, 5]); HashJoin([47, 0, 42, 46, 45, 5])"
3,49,1,"List([39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1])"
3,50,2,"Proj([49, 48]); Proj([49, 50])"
3,51,1,Count(1)
3,52,1,Sum(1)
3,53,1,"List([52, 51])"
3,54,1,"List([39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 14, 13, 12, 11, 10, 9, 8, 7, 6])"
3,55,1,"HashAgg([54, 53, 50])"
3,56,1,Ref(51)
3,57,1,Ref(52)
3,58,1,"Div([57, 56])"
3,59,1,Constant(Decimal(0.2))
3,60,1,"Mul([59, 58])"
3,61,1,"List([39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 14, 13, 12, 11, 10, 9, 8, 7, 6, 60])"
3,62,1,"Proj([61, 55])"
3,63,1,Ref(60)
3,64,1,"List([35, 34, 63])"
3,65,2,"Proj([64, 62]); Proj([64, 65])"
3,66,1,"Gt([63, 35])"
3,67,3,"Proj([64, 67]); Proj([64, 89]); Filter([66, 65])"
3,68,1,List([34])
3,69,3,"Proj([68, 67]); Proj([68, 69]); Proj([68, 89])"
3,70,1,Sum(34)
3,71,1,List([70])
3,72,1,"Agg([71, 69])"
3,73,1,Constant(Decimal(7.0))
3,74,1,Ref(70)
3,75,1,"Div([74, 73])"
3,76,1,List([75])
3,77,1,"Proj([76, 72])"
3,78,3,"Proj([15, 81]); Filter([0, 81]); Filter([19, 17])"
3,79,4,"Eq([14, 38]); Eq([38, 14]); And([0, 83]); And([83, 0])"
3,80,3,"Proj([15, 102]); Filter([0, 102]); Filter([21, 17])"
3,81,4,"Eq([2, 14]); Eq([14, 2]); And([0, 86]); And([86, 0])"
3,82,5,"Proj([182, 45]); Proj([182, 127]); Filter([0, 127]); Join([44, 83, 23, 41]); HashJoin([44, 0, 42, 43, 23, 41])"
3,83,1,"Filter([66, 62])"
3,84,1,"List([14, 13, 12, 11, 10, 9, 8, 7, 6, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24])"
