Stage,Class_ID,Node_Count,Nodes
2,0,1,Constant(Bool(true))
2,1,1,Column($1.1)
2,2,1,Column($1.0)
2,3,1,"List([2, 1])"
2,4,1,Table($1)
2,5,2,"Scan([4, 3, 0]); Proj([3, 5])"
2,6,1,"Constant(String(""AMERICA""))"
2,7,2,"Eq([1, 6]); Eq([6, 1])"
2,8,2,"Proj([3, 8]); Filter([7, 5])"
2,9,1,List([2])
2,10,2,"Proj([9, 8]); Proj([9, 10])"
2,11,1,Column($0.1(1))
2,12,1,Column($0.0(1))
2,13,1,"List([12, 11])"
2,14,1,Table($0)
2,15,2,"Scan([14, 13, 0]); Proj([13, 15])"
2,16,1,Column($0.2)
2,17,1,Column($0.0)
2,18,1,"List([17, 16])"
2,19,2,"Scan([14, 18, 0]); Proj([18, 19])"
2,20,1,Column($5.3)
2,21,1,Column($5.0)
2,22,1,"List([21, 20])"
2,23,1,Table($5)
2,24,2,"Scan([23, 22, 0]); Proj([22, 24])"
2,25,1,Column($6.4)
2,26,1,Column($6.1)
2,27,1,Column($6.0)
2,28,1,"List([27, 26, 25])"
2,29,1,Table($6)
2,30,2,"Scan([29, 28, 0]); Proj([28, 30])"
2,31,1,Column($7.6)
2,32,1,Column($7.5)
2,33,1,Column($7.2)
2,34,1,Column($7.1)
2,35,1,Column($7.0)
2,36,1,"List([35, 34, 33, 32, 31])"
2,37,1,Table($7)
2,38,2,"Scan([37, 36, 0]); Proj([36, 38])"
2,39,1,Column($3.3)
2,40,1,Column($3.0)
2,41,1,"List([40, 39])"
2,42,1,Table($3)
2,43,3,"Scan([42, 41, 0]); Proj([41, 43]); Filter([0, 43])"
2,44,1,Column($2.4)
2,45,1,Column($2.0)
2,46,1,"List([45, 44])"
2,47,1,Table($2)
2,48,3,"Scan([47, 46, 0]); Proj([46, 48]); Filter([0, 48])"
2,49,1,Inner
2,50,2,"Proj([189, 50]); Join([49, 0, 48, 43])"
2,51,2,"Eq([34, 45]); Eq([45, 34])"
2,52,2,"Eq([33, 40]); Eq([40, 33])"
2,53,2,"And([51, 52]); And([52, 51])"
2,54,1,"Join([49, 53, 50, 38])"
2,55,1,Constant(Date(Date(9131)))
2,56,2,"GtEq([25, 55]); LtEq([55, 25])"
2,57,1,Constant(Date(Date(9861)))
2,58,2,"GtEq([57, 25]); LtEq([25, 57])"
2,59,2,"And([56, 58]); And([58, 56])"
2,60,1,"Constant(String(""ECONOMY ANODIZED STEEL""))"
2,61,2,"Eq([44, 60]); Eq([60, 44])"
2,62,6,"And([56, 125]); And([58, 168]); And([59, 61]); And([61, 59]); And([125, 56]); And([168, 58])"
2,63,2,"Eq([27, 35]); Eq([35, 27])"
2,64,14,"And([56, 176]); And([58, 206]); And([59, 127]); And([61, 170]); And([62, 63]); And([63, 62]); And([125, 204]); And([127, 59]); And([168, 208]); And([170, 61]); And([176, 56]); And([204, 125]); And([206, 58]); And([208, 168])"
2,65,8,"Join([49, 63, 239, 213]); Join([49, 64, 54, 30]); Join([49, 127, 54, 213]); Join([49, 170, 239, 30]); Join([49, 176, 54, 236]); Join([49, 204, 239, 234]); Join([49, 206, 54, 234]); Join([49, 208, 239, 236])"
2,66,1,"List([39, 32, 31, 26, 25])"
2,67,6,"Proj([66, 65]); Proj([66, 67]); Proj([66, 184]); Proj([66, 274]); Proj([66, 282]); Proj([66, 284])"
2,68,2,"Eq([21, 26]); Eq([26, 21])"
2,69,1,"Join([49, 68, 67, 24])"
2,70,1,"List([39, 32, 31, 25, 20])"
2,71,2,"Proj([70, 69]); Proj([70, 71])"
2,72,2,"Eq([17, 20]); Eq([20, 17])"
2,73,1,"Join([49, 72, 71, 19])"
2,74,1,"List([39, 32, 31, 25, 16])"
2,75,2,"Proj([74, 73]); Proj([74, 75])"
2,76,2,"Eq([12, 39]); Eq([39, 12])"
2,77,1,"Join([49, 76, 75, 15])"
2,78,1,"List([32, 31, 25, 16, 11])"
2,79,2,"Proj([78, 77]); Proj([78, 79])"
2,80,2,"Eq([2, 16]); Eq([16, 2])"
2,81,1,"Join([49, 80, 79, 10])"
2,82,1,Constant(Int32(1))
2,83,1,"Sub([82, 31])"
2,84,2,"Mul([32, 83]); Mul([83, 32])"
2,85,1,Field(DateTimeField(Year))
2,86,1,"Extract([85, 25])"
2,87,1,"List([86, 84, 11])"
2,88,1,"Proj([87, 81])"
2,89,1,Ref(84)
2,90,1,Sum(89)
2,91,1,Constant(Int32(0))
2,92,1,"Type(Decimal(Some(30), Some(4)))"
2,93,1,"Cast([92, 91])"
2,94,1,"Constant(String(""IRAQ""))"
2,95,2,"Eq([11, 94]); Eq([94, 11])"
2,96,1,"If([95, 89, 93])"
2,97,1,Sum(96)
2,98,1,"List([97, 90])"
2,99,1,Ref(86)
2,100,1,List([99])
2,101,2,"HashAgg([100, 98, 88]); HashAgg([100, 98, 141])"
2,102,1,"Order([100, 101])"
2,103,1,Ref(90)
2,104,1,Ref(97)
2,105,1,"Div([104, 103])"
2,106,1,"List([99, 105])"
2,107,2,"Proj([106, 102]); Proj([106, 135])"
2,108,2,"And([58, 61]); And([61, 58])"
2,109,2,"And([61, 63]); And([63, 61])"
2,110,6,"And([58, 127]); And([61, 208]); And([63, 125]); And([125, 63]); And([127, 58]); And([208, 61])"
2,111,2,"Proj([28, 234]); Filter([58, 30])"
2,112,1,"List([99, 104, 103])"
2,113,2,"Proj([133, 101]); Proj([133, 134])"
2,114,1,"Order([100, 134])"
2,115,2,"And([58, 63]); And([63, 58])"
2,116,4,"Proj([28, 213]); Filter([56, 234]); Filter([58, 236]); Filter([59, 30])"
2,117,1,"List([99, 89, 11])"
2,118,2,"Proj([140, 88]); Proj([140, 141])"
2,119,1,"List([44, 39, 35, 32, 31])"
2,120,2,"Proj([143, 54]); Proj([143, 144])"
2,121,6,"And([56, 208]); And([58, 204]); And([59, 63]); And([63, 59]); And([204, 58]); And([208, 56])"
2,122,2,"Proj([28, 236]); Filter([56, 30])"
2,123,2,"And([56, 61]); And([61, 56])"
2,124,3,"Proj([143, 239]); Proj([143, 242]); Filter([61, 144])"
2,125,1,"List([45, 44, 40, 39])"
2,126,6,"And([56, 127]); And([61, 204]); And([63, 168]); And([127, 56]); And([168, 63]); And([204, 61])"
2,127,2,"And([56, 63]); And([63, 56])"
2,128,8,"Join([49, 63, 242, 213]); Join([49, 64, 144, 30]); Join([49, 127, 144, 213]); Join([49, 170, 242, 30]); Join([49, 176, 144, 236]); Join([49, 204, 242, 234]); Join([49, 206, 144, 234]); Join([49, 208, 242, 236])"
2,129,2,"Filter([61, 54]); Join([49, 259, 50, 38])"
2,130,2,"And([53, 61]); And([61, 53])"
2,131,1,"List([39, 35, 32, 31])"
2,132,2,"Proj([265, 239]); Proj([265, 242])"
2,133,4,"Join([49, 63, 271, 213]); Join([49, 170, 271, 30]); Join([49, 204, 271, 234]); Join([49, 208, 271, 236])"
2,134,1,"Join([49, 170, 281, 30])"
2,135,1,"Proj([265, 271])"
2,136,1,"Join([49, 63, 281, 213])"
