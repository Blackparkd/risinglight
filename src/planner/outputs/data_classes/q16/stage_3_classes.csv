Stage,Class_ID,Node_Count,Nodes
3,0,1,Constant(Bool(true))
3,1,1,Column($3.6)
3,2,1,Column($3.0)
3,3,1,"List([2, 1])"
3,4,1,Table($3)
3,5,3,"Scan([4, 3, 0]); Proj([3, 5]); Filter([0, 5])"
3,6,1,"Constant(String(""%Customer%Complaints%""))"
3,7,3,"And([0, 7]); And([7, 0]); Like([1, 6])"
3,8,3,"Proj([3, 8]); Filter([0, 8]); Filter([7, 5])"
3,9,1,List([2])
3,10,3,"Proj([9, 8]); Proj([9, 10]); Filter([0, 10])"
3,11,1,Column($4.1)
3,12,1,Column($4.0)
3,13,1,"List([12, 11])"
3,14,1,Table($4)
3,15,3,"Scan([14, 13, 0]); Proj([13, 15]); Filter([0, 15])"
3,16,1,Column($2.5)
3,17,1,Column($2.4)
3,18,1,Column($2.3)
3,19,1,Column($2.0)
3,20,1,"List([19, 18, 17, 16])"
3,21,1,Table($2)
3,22,3,"Scan([21, 20, 0]); Proj([20, 22]); Filter([0, 22])"
3,23,1,Constant(Int32(9))
3,24,1,Constant(Int32(36))
3,25,1,Constant(Int32(3))
3,26,1,Constant(Int32(19))
3,27,1,Constant(Int32(45))
3,28,1,Constant(Int32(23))
3,29,1,Constant(Int32(14))
3,30,1,Constant(Int32(49))
3,31,1,"List([30, 29, 28, 27, 26, 25, 24, 23])"
3,32,3,"And([0, 32]); And([32, 0]); In([16, 31])"
3,33,1,"Constant(String(""Brand#45""))"
3,34,3,"NotEq([18, 33]); And([0, 34]); And([34, 0])"
3,35,4,"And([0, 35]); And([32, 34]); And([34, 32]); And([35, 0])"
3,36,1,"Constant(String(""MEDIUM POLISHED%""))"
3,37,1,"Like([17, 36])"
3,38,3,"And([0, 38]); And([38, 0]); Not(37)"
3,39,8,"And([0, 39]); And([32, 62]); And([34, 88]); And([35, 38]); And([38, 35]); And([39, 0]); And([62, 32]); And([88, 34])"
3,40,9,"Proj([20, 40]); Filter([0, 40]); Filter([32, 137]); Filter([34, 139]); Filter([35, 90]); Filter([38, 64]); Filter([39, 22]); Filter([62, 92]); Filter([88, 94])"
3,41,1,List([12])
3,42,1,List([19])
3,43,1,Inner
3,44,3,"Filter([0, 44]); Join([43, 68, 40, 15]); HashJoin([43, 0, 42, 41, 40, 15])"
3,45,1,"List([11, 18, 17, 16])"
3,46,5,"Proj([45, 44]); Proj([45, 46]); Proj([45, 97]); Proj([45, 231]); Filter([0, 46])"
3,47,1,List([11])
3,48,1,Anti
3,49,3,"Proj([45, 49]); Join([48, 71, 46, 10]); HashJoin([48, 0, 47, 9, 46, 10])"
3,50,1,CountDistinct(11)
3,51,1,List([50])
3,52,1,"List([18, 17, 16])"
3,53,1,"HashAgg([52, 51, 49])"
3,54,1,Ref(50)
3,55,1,Desc(54)
3,56,1,"List([55, 18, 17, 16])"
3,57,1,"Order([56, 53])"
3,58,1,"List([18, 17, 16, 54])"
3,59,5,"Proj([20, 139]); Filter([0, 139]); Filter([32, 90]); Filter([38, 92]); Filter([88, 22])"
3,60,4,"And([0, 62]); And([34, 38]); And([38, 34]); And([62, 0])"
3,61,5,"Proj([20, 64]); Filter([0, 64]); Filter([32, 94]); Filter([34, 92]); Filter([35, 22])"
3,62,3,"Filter([0, 97]); Join([43, 68, 15, 40]); HashJoin([43, 0, 41, 42, 15, 40])"
3,63,4,"Eq([12, 19]); Eq([19, 12]); And([0, 68]); And([68, 0])"
3,64,1,"List([18, 17, 16, 11])"
3,65,4,"Eq([2, 11]); Eq([11, 2]); And([0, 71]); And([71, 0])"
3,66,5,"Proj([20, 137]); Filter([0, 137]); Filter([34, 90]); Filter([38, 94]); Filter([62, 22])"
3,67,2,"Proj([58, 53]); Proj([58, 74])"
3,68,3,"Proj([58, 57]); Proj([58, 75]); Order([56, 74])"
3,69,5,"Proj([230, 44]); Proj([230, 46]); Proj([230, 97]); Proj([230, 231]); Filter([0, 231])"
3,70,4,"And([0, 88]); And([32, 38]); And([38, 32]); And([88, 0])"
3,71,3,"Proj([20, 90]); Filter([0, 90]); Filter([38, 22])"
3,72,3,"Proj([20, 92]); Filter([0, 92]); Filter([32, 22])"
3,73,3,"Proj([20, 94]); Filter([0, 94]); Filter([34, 22])"
