Stage,Class_ID,Node_Count,Nodes
2,0,1,Constant(Bool(true))
2,1,1,Column($7.2(1))
2,2,1,Column($7.0(1))
2,3,1,"List([2, 1])"
2,4,1,Table($7)
2,5,2,"Scan([4, 3, 0]); Proj([3, 5])"
2,6,1,Column($7.12(2))
2,7,1,Column($7.11(2))
2,8,1,Column($7.2(2))
2,9,1,Column($7.0(2))
2,10,1,"List([9, 8, 7, 6])"
2,11,2,"Scan([4, 10, 0]); Proj([10, 11])"
2,12,2,"Gt([6, 7]); Lt([7, 6])"
2,13,2,"Proj([10, 13]); Filter([12, 11])"
2,14,1,"List([9, 8])"
2,15,2,"Proj([14, 13]); Proj([14, 15])"
2,16,1,Column($0.1)
2,17,1,Column($0.0)
2,18,1,"List([17, 16])"
2,19,1,Table($0)
2,20,2,"Scan([19, 18, 0]); Proj([18, 20])"
2,21,1,"Constant(String(""SAUDI ARABIA""))"
2,22,2,"Eq([16, 21]); Eq([21, 16])"
2,23,2,"Proj([18, 23]); Filter([22, 20])"
2,24,1,List([17])
2,25,2,"Proj([24, 23]); Proj([24, 25])"
2,26,1,Column($6.2)
2,27,1,Column($6.0)
2,28,1,"List([27, 26])"
2,29,1,Table($6)
2,30,2,"Scan([29, 28, 0]); Proj([28, 30])"
2,31,1,"Constant(String(""F""))"
2,32,2,"Eq([26, 31]); Eq([31, 26])"
2,33,2,"Proj([28, 33]); Filter([32, 30])"
2,34,1,List([27])
2,35,2,"Proj([34, 33]); Proj([34, 35])"
2,36,1,Column($7.12)
2,37,1,Column($7.11)
2,38,1,Column($7.2)
2,39,1,Column($7.0)
2,40,1,"List([39, 38, 37, 36])"
2,41,2,"Scan([4, 40, 0]); Proj([40, 41])"
2,42,2,"Gt([36, 37]); Lt([37, 36])"
2,43,2,"Proj([40, 43]); Filter([42, 41])"
2,44,1,"List([39, 38])"
2,45,2,"Proj([44, 43]); Proj([44, 45])"
2,46,1,Column($3.3)
2,47,1,Column($3.1)
2,48,1,Column($3.0)
2,49,1,"List([48, 47, 46])"
2,50,1,Table($3)
2,51,2,"Scan([50, 49, 0]); Proj([49, 51])"
2,52,2,"Eq([38, 48]); Eq([48, 38])"
2,53,1,Inner
2,54,1,"Join([53, 52, 51, 45])"
2,55,1,"List([47, 46, 39, 38])"
2,56,2,"Proj([55, 54]); Proj([55, 56])"
2,57,2,"Eq([27, 39]); Eq([39, 27])"
2,58,1,"Join([53, 57, 56, 35])"
2,59,2,"Proj([55, 58]); Proj([55, 59])"
2,60,2,"Eq([17, 46]); Eq([46, 17])"
2,61,1,"Join([53, 60, 59, 25])"
2,62,1,"List([47, 39, 38])"
2,63,2,"Proj([62, 61]); Proj([62, 63])"
2,64,2,"Eq([9, 39]); Eq([39, 9])"
2,65,2,"NotEq([8, 38]); NotEq([38, 8])"
2,66,2,"And([64, 65]); And([65, 64])"
2,67,1,Anti
2,68,2,"Proj([62, 68]); Join([67, 66, 63, 15])"
2,69,2,"Eq([2, 39]); Eq([39, 2])"
2,70,2,"NotEq([1, 38]); NotEq([38, 1])"
2,71,2,"And([69, 70]); And([70, 69])"
2,72,1,Semi
2,73,1,"Join([72, 71, 68, 5])"
2,74,1,List([47])
2,75,2,"Proj([74, 73]); Proj([74, 75])"
2,76,1,RowCount
2,77,1,List([76])
2,78,1,"HashAgg([74, 77, 75])"
2,79,1,Ref(76)
2,80,1,Desc(79)
2,81,1,"List([80, 47])"
2,82,1,"Order([81, 78])"
2,83,1,"List([47, 79])"
2,84,3,"Proj([83, 82]); Proj([83, 84]); Order([81, 103])"
2,85,1,Constant(Int32(0))
2,86,1,Constant(Int32(100))
2,87,4,"Proj([83, 101]); Proj([83, 102]); Limit([86, 85, 84]); TopN([86, 85, 81, 103])"
2,88,2,"Limit([86, 85, 82]); TopN([86, 85, 81, 78])"
2,89,2,"Proj([83, 78]); Proj([83, 103])"
