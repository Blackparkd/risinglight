Stage,Class_ID,Node_Count,Nodes
1,0,1,Constant(Bool(true))
1,1,1,Column($0.3(1))
1,2,1,Column($0.2(1))
1,3,1,Column($0.1(1))
1,4,1,Column($0.0(1))
1,5,1,"List([4, 3, 2, 1])"
1,6,1,Table($0)
1,7,1,"Scan([6, 5, 0])"
1,8,1,Column($3.6(1))
1,9,1,Column($3.5(1))
1,10,1,Column($3.4(1))
1,11,1,Column($3.3(1))
1,12,1,Column($3.2(1))
1,13,1,Column($3.1(1))
1,14,1,Column($3.0(1))
1,15,1,"List([14, 13, 12, 11, 10, 9, 8])"
1,16,1,Table($3)
1,17,1,"Scan([16, 15, 0])"
1,18,1,Column($4.4(1))
1,19,1,Column($4.3(1))
1,20,1,Column($4.2(1))
1,21,1,Column($4.1(1))
1,22,1,Column($4.0(1))
1,23,1,"List([22, 21, 20, 19, 18])"
1,24,1,Table($4)
1,25,1,"Scan([24, 23, 0])"
1,26,1,Inner
1,27,1,"Join([26, 0, 25, 17])"
1,28,1,"Join([26, 0, 27, 7])"
1,29,2,"Eq([14, 21]); Eq([21, 14])"
1,30,2,"Eq([4, 11]); Eq([11, 4])"
1,31,2,"And([29, 30]); And([30, 29])"
1,32,1,"Constant(String(""GERMANY""))"
1,33,2,"Eq([3, 32]); Eq([32, 3])"
1,34,6,"And([29, 101]); And([30, 113]); And([31, 33]); And([33, 31]); And([101, 29]); And([113, 30])"
1,35,7,"Filter([29, 141]); Filter([30, 139]); Filter([31, 117]); Filter([33, 105]); Filter([34, 28]); Filter([101, 119]); Filter([113, 125])"
1,36,1,"Mul([19, 20])"
1,37,1,Sum(36)
1,38,1,List([37])
1,39,1,"Agg([38, 35])"
1,40,1,Constant(Decimal(0.0001000000))
1,41,1,Ref(37)
1,42,1,"Mul([41, 40])"
1,43,1,List([42])
1,44,1,"Proj([43, 39])"
1,45,1,Column($0.3)
1,46,1,Column($0.2)
1,47,1,Column($0.1)
1,48,1,Column($0.0)
1,49,1,"List([48, 47, 46, 45])"
1,50,1,"Scan([6, 49, 0])"
1,51,1,Column($3.6)
1,52,1,Column($3.5)
1,53,1,Column($3.4)
1,54,1,Column($3.3)
1,55,1,Column($3.2)
1,56,1,Column($3.1)
1,57,1,Column($3.0)
1,58,1,"List([57, 56, 55, 54, 53, 52, 51])"
1,59,1,"Scan([16, 58, 0])"
1,60,1,Column($4.4)
1,61,1,Column($4.3)
1,62,1,Column($4.2)
1,63,1,Column($4.1)
1,64,1,Column($4.0)
1,65,1,"List([64, 63, 62, 61, 60])"
1,66,1,"Scan([24, 65, 0])"
1,67,1,"Join([26, 0, 66, 59])"
1,68,1,"Join([26, 0, 67, 50])"
1,69,2,"Eq([57, 63]); Eq([63, 57])"
1,70,2,"Eq([48, 54]); Eq([54, 48])"
1,71,2,"And([69, 70]); And([70, 69])"
1,72,2,"Eq([32, 47]); Eq([47, 32])"
1,73,6,"And([69, 103]); And([70, 115]); And([71, 72]); And([72, 71]); And([103, 69]); And([115, 70])"
1,74,7,"Filter([69, 149]); Filter([70, 147]); Filter([71, 121]); Filter([72, 107]); Filter([73, 68]); Filter([103, 123]); Filter([115, 128])"
1,75,1,"Mul([61, 62])"
1,76,1,Sum(75)
1,77,1,List([76])
1,78,1,List([64])
1,79,1,"HashAgg([78, 77, 74])"
1,80,1,LeftOuter
1,81,1,"Join([80, 0, 79, 44])"
1,82,1,Ref(42)
1,83,1,Ref(76)
1,84,1,"Gt([83, 82])"
1,85,1,"Filter([84, 81])"
1,86,1,Desc(83)
1,87,1,List([86])
1,88,1,"Order([87, 85])"
1,89,1,"List([64, 83])"
1,90,1,"Proj([89, 88])"
1,91,2,"And([30, 33]); And([33, 30])"
1,92,2,"And([70, 72]); And([72, 70])"
1,93,3,"Filter([29, 125]); Filter([30, 119]); Filter([31, 28])"
1,94,3,"Filter([69, 128]); Filter([70, 123]); Filter([71, 68])"
1,95,2,"And([29, 33]); And([33, 29])"
1,96,2,"And([69, 72]); And([72, 69])"
1,97,1,"Filter([33, 28])"
1,98,1,"Filter([29, 28])"
1,99,1,"Filter([72, 68])"
1,100,1,"Filter([69, 68])"
1,101,1,"Filter([30, 28])"
1,102,1,"Filter([70, 68])"
1,103,3,"Filter([69, 121]); Filter([72, 123]); Filter([115, 68])"
1,104,3,"Filter([29, 117]); Filter([33, 119]); Filter([113, 28])"
1,105,3,"Filter([30, 117]); Filter([33, 125]); Filter([101, 28])"
1,106,3,"Filter([70, 121]); Filter([72, 128]); Filter([103, 68])"
