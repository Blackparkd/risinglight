Stage,Class_ID,Node_Count,Nodes
3,0,1,Constant(Bool(true))
3,1,1,Column($2.4)
3,2,1,Column($2.0)
3,3,1,"List([2, 1])"
3,4,1,Table($2)
3,5,3,"Scan([4, 3, 0]); Proj([3, 5]); Filter([0, 5])"
3,6,1,Column($7.10)
3,7,1,Column($7.6)
3,8,1,Column($7.5)
3,9,1,Column($7.1)
3,10,1,"List([9, 8, 7, 6])"
3,11,1,Table($7)
3,12,3,"Scan([11, 10, 0]); Proj([10, 12]); Filter([0, 12])"
3,13,1,Constant(Date(Date(9404)))
3,14,3,"Gt([13, 6]); And([0, 14]); And([14, 0])"
3,15,1,Constant(Date(Date(9374)))
3,16,3,"GtEq([6, 15]); And([0, 16]); And([16, 0])"
3,17,4,"And([0, 17]); And([14, 16]); And([16, 14]); And([17, 0])"
3,18,5,"Proj([10, 18]); Filter([0, 18]); Filter([14, 62]); Filter([16, 48]); Filter([17, 12])"
3,19,1,"List([9, 8, 7])"
3,20,3,"Proj([19, 18]); Proj([19, 20]); Filter([0, 20])"
3,21,1,List([2])
3,22,1,List([9])
3,23,1,Inner
3,24,3,"Filter([0, 24]); Join([23, 52, 20, 5]); HashJoin([23, 0, 22, 21, 20, 5])"
3,25,1,"List([8, 7, 1])"
3,26,5,"Proj([25, 24]); Proj([25, 26]); Proj([25, 68]); Proj([25, 108]); Filter([0, 26])"
3,27,1,Constant(Int32(1))
3,28,1,"Sub([27, 7])"
3,29,1,"Mul([8, 28])"
3,30,1,Sum(29)
3,31,1,Constant(Int32(0))
3,32,1,"Type(Decimal(Some(30), Some(4)))"
3,33,1,"Cast([32, 31])"
3,34,1,"Constant(String(""PROMO%""))"
3,35,1,"Like([1, 34])"
3,36,1,"If([35, 29, 33])"
3,37,1,Sum(36)
3,38,1,"List([37, 30])"
3,39,1,"Agg([38, 26])"
3,40,1,Ref(30)
3,41,1,Ref(37)
3,42,1,Constant(Decimal(100.00))
3,43,1,"Mul([42, 41])"
3,44,1,"Div([43, 40])"
3,45,1,List([44])
3,46,1,"Proj([45, 39])"
3,47,3,"Proj([10, 48]); Filter([0, 48]); Filter([14, 12])"
3,48,3,"Filter([0, 68]); Join([23, 52, 5, 20]); HashJoin([23, 0, 21, 22, 5, 20])"
3,49,4,"Eq([2, 9]); Eq([9, 2]); And([0, 52]); And([52, 0])"
3,50,3,"Proj([10, 62]); Filter([0, 62]); Filter([16, 12])"
3,51,1,"List([1, 8, 7])"
3,52,5,"Proj([107, 24]); Proj([107, 26]); Proj([107, 68]); Proj([107, 108]); Filter([0, 108])"
